{"version":3,"sources":["services/saveService.tsx","components/OptionsBar.tsx","components/DemoPage.tsx","services/colorService.tsx","components/LandingPage.tsx","components/SignUp.tsx","components/SignIn.tsx","components/Navbar.tsx","components/Hue.tsx","components/ColorPane.tsx","components/Palette.tsx","components/PalettePage.tsx","components/Icons.tsx","components/Card.tsx","components/CardList.tsx","components/SavedPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["baseUrl","exploreService","getPalettes","axios","get","addPalette","paletteObject","newObject","id","uuidv4","colors","post","colorModes","title","mode","OptionsBar","colorMode","setColorMode","checkLockGenerate","addColor","length","numberOfItems","useDropdownMenu","buttonProps","isOpen","setIsOpen","className","style","marginRight","onClick","role","visibility","map","handleClickMode","saveService","navigator","clipboard","writeText","string","color","push","join","formatString","DemoPage","generatePalette","getPalette","count","a","first","chroma","random","hex","substring","response","returnedArray","data","newArray","i","value","lock","colorService","getColorsArrFromSlug","colorSlug","colorsArr","split","forEach","el","getColorSlug","replaceAll","slice","Landing","setColors","history","useHistory","handleClickGenerate","SignUp","showSignUpModal","setShowSignUpModal","setNavbarOpen","modalRef","useRef","type","ref","e","current","target","console","log","initialValues","username","email","password","validationSchema","Yup","required","onSubmit","values","actions","setTimeout","resetForm","name","field","form","htmlFor","aria-label","placeholder","touched","errors","border","component","preventDefault","showSignInModal","setShowSignInModal","Navbar","useState","navbarOpen","width","height","dimensions","setDimensions","location","useLocation","targetRef","useLayoutEffect","offsetWidth","offsetHeight","useEffect","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","top","Hue","curColor","setNewColorButton","setShowHueButton","isMobile","light","setLight","hover","setHovered","checkColor","format","rgb","parseInt","onMouseEnter","onMouseLeave","backgroundColor","writingMode","textOrientation","fontSize","ColorPane","deleteColor","toggleLock","dragHandleProps","showHue","setShowHue","newColor","setNewColor","oldColor","setOldColor","newColors","getNewColors","scaleArr","darken","toUpperCase","brighten","background","outline","renderButtons","Palette","displayDraggablePanels","index","draggableId","provided","innerRef","draggableProps","onDragEnd","result","destination","items","Array","from","splice","source","reorderedItem","droppableId","droppableProps","direction","display","PalettePage","window","innerWidth","setWidth","handleWindowSizeChange","addEventListener","removeEventListener","TrashIcon","Card","palette","mockUser","likes","likedPalettes","includes","confirm","CardList","SavedPage","setPalette","then","App","pathname","initialColors","getInitialColors","startsWith","replace","checkLock","find","generateLockedPalette","input","Math","floor","exact","path","LandingPage","newPalette","filter","item","colorLock","changedColor","findIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1fa8d90.chunk.js","sourcesContent":["//@ts-nocheck\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nconst baseUrl = \"http://localhost:3001/api/palettes\"\n\nconst getPalettes = () => {\n  let response = axios.get(baseUrl)\n    return response;\n}\n\nconst addPalette = (paletteObject) => {\n    let newObject = {\n        id: uuidv4(),\n        colors: paletteObject\n    }\n    axios.post(baseUrl, newObject)\n}\n\nconst exploreService = {\n    getPalettes,\n    addPalette\n}\n\nexport default exploreService;","import React from 'react';\nimport saveService from '../services/saveService';\nimport useDropdownMenu from 'react-accessible-dropdown-menu-hook';\n\nconst colorModes: { title: string; mode: string }[] = [\n  { title: 'Analogic', mode: 'analogic' },\n  { title: 'Analogic Complement', mode: 'analogic-complement' },\n  { title: 'Triadic', mode: 'triad' },\n  { title: 'Quadratic', mode: 'quad' },\n  { title: 'Complement', mode: 'complement' },\n  { title: 'Monochrome', mode: 'monochrome' },\n  { title: 'Monochrome Dark', mode: 'monochrome-dark' },\n  { title: 'Monochrome Light', mode: 'monochrome-light' },\n];\n\ninterface OptionsProps {\n  colors: {\n    id: string;\n    color: string;\n    lock: boolean;\n  }[];\n  colorMode: string;\n  setColorMode: (mode: string) => void;\n  checkLockGenerate: any;\n  addColor: () => void;\n  length: number;\n}\n\nconst OptionsBar = ({\n  colors,\n  colorMode,\n  setColorMode,\n  checkLockGenerate,\n  addColor,\n  length,\n}: OptionsProps) => {\n  const numberOfItems = colorModes.length;\n  const { buttonProps, isOpen, setIsOpen } = useDropdownMenu(numberOfItems);\n\n  const saveColor = () => {\n    saveService.addPalette(colors);\n  };\n\n  const formatString = () => {\n    let string: any[] = [];\n    colors.map((color) => {\n      return string.push(color.color);\n    });\n\n    return string.join(',');\n  };\n\n  const displayAdd = () => {\n    if (length < 10) {\n      return (\n        <button style={{ marginRight: '2%' }} onClick={addColor}>\n          Add Colors{' '}\n        </button>\n      );\n    } else {\n      return <p>Max colors</p>;\n    }\n  };\n\n  const handleClickMode = (mode: { title: string; mode: string }) => {\n    setColorMode(mode.mode);\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"flex justify-end\">\n      <div\n        className=\"relative\"\n        style={{\n          marginRight: '2%',\n        }}\n      >\n        <button {...buttonProps} onClick={() => setIsOpen(true)}>\n          Scheme\n        </button>\n        <div\n          role=\"menu\"\n          id=\"menu\"\n          className=\"absolute flex flex-col bg-white shadow-md\"\n          style={{\n            visibility: isOpen ? 'visible' : 'hidden',\n          }}\n        >\n          {colorModes.map((mode) => {\n            return (\n              <button\n                key={mode.title}\n                className={`text-left whitespace-nowrap px-4 py-1 ${\n                  colorMode === mode.mode ? `bg-gray-200` : `white`\n                } hover:bg-gray-200`}\n                onClick={() => handleClickMode(mode)}\n              >\n                {mode.title}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      <button style={{ marginRight: '2%' }} onClick={checkLockGenerate}>\n        Generate\n      </button>\n      {displayAdd()}\n      <button style={{ marginRight: '2%' }} onClick={saveColor}>\n        Save\n      </button>\n      <button\n        style={{ marginRight: '2%' }}\n        onClick={() => {\n          navigator.clipboard.writeText(formatString());\n        }}\n      >\n        Export\n      </button>\n    </div>\n  );\n};\n\nexport default OptionsBar;\n","//@ts-nocheck\nimport React from \"react\";\nimport OptionsBar from \"./OptionsBar\";\n\nfunction DemoPage({ colors, setColorMode, generatePalette }) {\n  return (\n\n    <div className=\"flex justify-center\">\n      <OptionsBar setColorMode={setColorMode} generatePalette={generatePalette}/>\n      <h1 className=\"pt-20\">Demo Page</h1>\n    </div>\n  );\n}\n\nexport default DemoPage;\n","//@ts-nocheck\nimport axios from \"axios\";\nimport chroma from \"chroma-js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst baseUrl = \"https://www.thecolorapi.com/\";\n\ntype Colors = { id: string; color: string; lock: boolean }[];\n\nconst getPalette = (color: string, mode: string, count: number) => {\n  let response = axios.get(\n    `${baseUrl}scheme?hex=${color}&mode=${mode}&count=${count}`\n  );\n  return response;\n};\n\nconst generatePalette = async (colorMode: string) => {\n  const first = chroma.random().hex().substring(1);\n  const response = await getPalette(first, colorMode, 5);\n  const returnedArray = response.data.colors;\n  const newArray = [];\n  for (let i = 0; i < returnedArray.length; i++) {\n    newArray.push({ id: uuidv4(), color: returnedArray[i].hex.value, lock: false });\n  }\n  return newArray;\n};\n\nconst getColorSlug = (colors: Colors) => {\n  return colors\n    .map((el) => el.color)\n    .join(\"\")\n    .replaceAll(\"#\", \"-\")\n    .slice(1);\n};\n\nconst getColorsArrFromSlug = (colorSlug: string) => {\n  const colorsArr: Colors = [];\n  colorSlug\n    .split(\"-\")\n    .forEach((el) => colorsArr.push({ id: uuidv4(), color: \"#\" + el }));\n  return colorsArr;\n};\n\nconst colorService = {\n  getPalette,\n  generatePalette,\n  getColorsArrFromSlug,\n  getColorSlug,\n};\n\nexport default colorService;\n","//@ts-nocheck\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport colorService from \"../services/colorService\";\n\nfunction Landing({ setColors, colorMode }) {\n  const history = useHistory();\n\n  const handleClickGenerate = async () => {\n    const colorsArr = await colorService.generatePalette(colorMode);\n    const colorSlug = colorService.getColorSlug(colorsArr);\n    setColors(colorsArr);\n    history.push(`palette/${colorSlug}`);\n  };\n\n  return (\n    <div className=\"mt-20\">\n      <div className=\"flex justify-center\">\n        <h1 className=\"text-2xl sm:text-4xl lg:text-5xl\">\n          Welcome to UNNAMED APP!\n        </h1>\n      </div>\n      <div className=\"flex justify-center mt-20\">\n        <p>*Description of app here*</p>\n      </div>\n      <div className=\"flex justify-center mt-40 text-xl\">\n        <button\n          onClick={handleClickGenerate}\n          className=\"bg-blue-900 opacity-90 p-6 rounded-full text-white transition duration-300 hover:opacity-100\"\n        >\n          Generate Palette\n        </button>\n      </div>\n      <div className=\"flex justify-center mt-20\">\n        <p>*animated gif of app in action here*</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\n","//@ts-nocheck\nimport React, { useRef } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nexport default function SignUp({\n  showSignUpModal,\n  setShowSignUpModal,\n  setNavbarOpen,\n}) {\n  const modalRef = useRef();\n\n  const closeModal = () => {\n    setShowSignUpModal(false);\n  };\n\n  const handleOutsideClick = (e) => {\n    if (modalRef.current === e.target) {\n      console.log('handleOutsideClick runs');\n      closeModal();\n      setNavbarOpen(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // register user\n\n    // if success\n    setShowSignUpModal(false);\n    setNavbarOpen(false);\n  };\n\n  return (\n    <>\n      <button\n        className=\"bg-white text-white font-bold uppercase ease-linear transition-all duration-150\"\n        type=\"button\"\n        onClick={() => setShowSignUpModal(true)}\n      >\n        <div\n          className={`px-3 py-2 flex text-base uppercase font-medium leading-snug text-gray-800 hover:opacity-75`}\n        >\n          <div className=\"mx-4\">Sign Up</div>\n        </div>\n      </button>\n      {showSignUpModal ? (\n        <>\n          <div\n            ref={modalRef}\n            onClick={handleOutsideClick}\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n          >\n            <div className=\"relative w-auto sm:w-96 my-6 mx-auto max-w-3xl\">\n              <div className=\"\">\n                <div className=\"flex\"></div>\n                <Formik\n                  initialValues={{\n                    username: '',\n                    email: '',\n                    password: '',\n                  }}\n                  validationSchema={Yup.object({\n                    username: Yup.string().required('Username cannot be empty'),\n                    email: Yup.string()\n                      .email('Looks like this is not an email')\n                      .required('Email cannot be empty'),\n                    password: Yup.string().required('Password cannot be empty'),\n                  })}\n                  onSubmit={(values, actions) => {\n                    setTimeout(() => {\n                      actions.resetForm();\n                    }, 1000);\n                  }}\n                >\n                  <Form className=\"flex flex-col p-5 mt-5 stext-black bg-white rounded-lg shadow-xl lg:p-10 \">\n                    <div className=\"pt-3 pb-9 text-center\">\n                      <h1 className=\"text-3xl\">Sign Up</h1>\n                    </div>\n\n                    <div className=\"py-3\">\n                      <Field name=\"username\">\n                        {({ field, form }) => (\n                          <div className=\"relative\">\n                            <label\n                              htmlFor=\"username\"\n                              aria-label=\"Username\"\n                              className=\"hidden\"\n                            >\n                              Username\n                            </label>\n                            <input\n                              {...field}\n                              className=\"w-full p-4 font-semibold placeholder-gray-500 border rounded-lg outline-none lg:px-8 focus:ring-accent-blue focus:ring-1\"\n                              placeholder=\"Username\"\n                              type=\"text\"\n                              name=\"username\"\n                              id=\"username\"\n                              style={\n                                form.touched.username && form.errors.username\n                                  ? { border: '2px solid red' }\n                                  : null\n                              }\n                            />\n                          </div>\n                        )}\n                      </Field>\n                      <ErrorMessage\n                        name=\"username\"\n                        component=\"div\"\n                        className=\"absolute text-xs italic text-right text-primary-red\"\n                      />\n                    </div>\n                    <div className=\"py-3\">\n                      <Field name=\"email\">\n                        {({ field, form }) => (\n                          <div className=\"relative\">\n                            <label\n                              htmlFor=\"email\"\n                              aria-label=\"Email\"\n                              className=\"hidden\"\n                            >\n                              Email\n                            </label>\n                            <input\n                              {...field}\n                              className=\"w-full p-4 font-semibold placeholder-gray-500 border rounded-lg outline-none lg:px-8 focus:ring-accent-blue focus:ring-1\"\n                              placeholder=\"Email\"\n                              type=\"text\"\n                              name=\"email\"\n                              id=\"email\"\n                              style={\n                                form.touched.email && form.errors.email\n                                  ? { border: '2px solid red' }\n                                  : null\n                              }\n                            />\n                          </div>\n                        )}\n                      </Field>\n                      <ErrorMessage\n                        name=\"email\"\n                        component=\"div\"\n                        className=\"absolute text-xs italic text-right text-primary-red\"\n                      />\n                    </div>\n                    <div className=\"py-3\">\n                      <Field name=\"password\">\n                        {({ field, form }) => (\n                          <div className=\"relative\">\n                            <label\n                              htmlFor=\"password\"\n                              aria-label=\"Password\"\n                              className=\"hidden\"\n                            >\n                              Password\n                            </label>\n                            <input\n                              {...field}\n                              className=\"w-full p-4 font-semibold placeholder-gray-500 border rounded-lg outline-none lg:px-8 focus:ring-accent-blue focus:ring-1\"\n                              placeholder=\"Password\"\n                              type=\"password\"\n                              name=\"password\"\n                              id=\"password\"\n                              style={\n                                form.touched.password && form.errors.password\n                                  ? { border: '2px solid red' }\n                                  : null\n                              }\n                            />\n                          </div>\n                        )}\n                      </Field>\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"absolute text-xs italic text-right text-primary-red\"\n                      />\n                    </div>\n                    <div className=\"mb-5 mt-9\">\n                      <button\n                        type=\"submit\"\n                        className=\"bg-blue-900 opacity-90 p-2 w-full rounded-full text-white transition duration-300 hover:opacity-100\"\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </Form>\n                </Formik>\n              </div>\n            </div>\n          </div>\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n        </>\n      ) : null}\n    </>\n  );\n}\n","//@ts-nocheck\nimport React, { useRef } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nexport default function SignUp({\n  showSignInModal,\n  setShowSignInModal,\n  setNavbarOpen,\n}) {\n  const modalRef = useRef();\n\n  const closeModal = () => {\n    setShowSignInModal(false);\n  };\n\n  const handleOutsideClick = (e) => {\n    if (modalRef.current === e.target) {\n      console.log('handleOutsideClick runs');\n      closeModal();\n      setNavbarOpen(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // sign in user\n\n    // if success\n    setShowSignInModal(false);\n    setNavbarOpen(false);\n  };\n\n  return (\n    <>\n      <button\n        className=\"bg-white text-white font-bold uppercase ease-linear transition-all duration-150\"\n        type=\"button\"\n        onClick={() => setShowSignInModal(true)}\n      >\n        <div\n          className={`px-3 py-2 flex text-base uppercase font-medium leading-snug text-gray-800 hover:opacity-75`}\n        >\n          <div className=\"mx-4\">Sign In</div>\n        </div>\n      </button>\n      {showSignInModal ? (\n        <>\n          <div\n            ref={modalRef}\n            onClick={handleOutsideClick}\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n          >\n            <div className=\"relative w-auto sm:w-96 my-6 mx-auto max-w-3xl\">\n              <div className=\"\">\n                <div className=\"flex\"></div>\n                <Formik\n                  initialValues={{\n                    username: '',\n                    password: '',\n                  }}\n                  validationSchema={Yup.object({\n                    username: Yup.string().required('Username cannot be empty'),\n                    password: Yup.string().required('Password cannot be empty'),\n                  })}\n                  onSubmit={(values, actions) => {\n                    setTimeout(() => {\n                      actions.resetForm();\n                    }, 1000);\n                  }}\n                >\n                  <Form className=\"flex flex-col p-5 mt-5 stext-black bg-white rounded-lg shadow-xl lg:p-10 \">\n                    <div className=\"pt-3 pb-9 text-center\">\n                      <h1 className=\"text-3xl\">Sign In</h1>\n                    </div>\n\n                    <div className=\"py-3\">\n                      <Field name=\"username\">\n                        {({ field, form }) => (\n                          <div className=\"relative\">\n                            <label\n                              htmlFor=\"username\"\n                              aria-label=\"Username\"\n                              className=\"hidden\"\n                            >\n                              Username\n                            </label>\n                            <input\n                              {...field}\n                              className=\"w-full p-4 font-semibold placeholder-gray-500 border rounded-lg outline-none lg:px-8 focus:ring-accent-blue focus:ring-1\"\n                              placeholder=\"Username\"\n                              type=\"text\"\n                              name=\"username\"\n                              id=\"username\"\n                              style={\n                                form.touched.username && form.errors.username\n                                  ? { border: '2px solid red' }\n                                  : null\n                              }\n                            />\n                          </div>\n                        )}\n                      </Field>\n                      <ErrorMessage\n                        name=\"username\"\n                        component=\"div\"\n                        className=\"absolute text-xs italic text-right text-primary-red\"\n                      />\n                    </div>\n                    <div className=\"py-3\">\n                      <Field name=\"password\">\n                        {({ field, form }) => (\n                          <div className=\"relative\">\n                            <label\n                              htmlFor=\"password\"\n                              aria-label=\"Password\"\n                              className=\"hidden\"\n                            >\n                              Password\n                            </label>\n                            <input\n                              {...field}\n                              className=\"w-full p-4 font-semibold placeholder-gray-500 border rounded-lg outline-none lg:px-8 focus:ring-accent-blue focus:ring-1\"\n                              placeholder=\"Password\"\n                              type=\"password\"\n                              name=\"password\"\n                              id=\"password\"\n                              style={\n                                form.touched.password && form.errors.password\n                                  ? { border: '2px solid red' }\n                                  : null\n                              }\n                            />\n                          </div>\n                        )}\n                      </Field>\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"absolute text-xs italic text-right text-primary-red\"\n                      />\n                    </div>\n                    <div className=\"mb-5 mt-9\">\n                      <button\n                        type=\"submit\"\n                        className=\"bg-blue-900 opacity-90 p-2 w-full rounded-full text-white transition duration-300 hover:opacity-100\"\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </Form>\n                </Formik>\n              </div>\n            </div>\n          </div>\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n        </>\n      ) : null}\n    </>\n  );\n}\n","//@ts-nocheck\nimport React, { useState, useRef, useLayoutEffect, useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport colorService from '../services/colorService';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\n\nexport default function Navbar({ colors }) {\n  const [navbarOpen, setNavbarOpen] = useState(false);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [showSignUpModal, setShowSignUpModal] = useState(false);\n  const [showSignInModal, setShowSignInModal] = useState(false);\n\n  const isLoggedIn = false;\n\n  let location = useLocation();\n  const targetRef = useRef();\n\n  useLayoutEffect(() => {\n    if (targetRef.current) {\n      setDimensions({\n        width: targetRef.current.offsetWidth,\n        height: targetRef.current.offsetHeight,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    setNavbarOpen(false);\n  }, [location]);\n\n  return (\n    <>\n      <nav\n        ref={targetRef}\n        className=\"relative flex flex-wrap items-center justify-between z-50 px-2 py-3 bg-white mb-3 shadow-lg\"\n      >\n        <div className=\"flex w-full px-4  flex-wrap items-center justify-between\">\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n            <div className=\"mx-4 self-center\">\n              <h1 className=\"text-2xl\">\n                <NavLink to=\"/\">UNNAMED APP</NavLink>\n              </h1>\n            </div>\n            <button\n              className=\"text-gray-800 cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n              type=\"button\"\n              onClick={() => setNavbarOpen(!navbarOpen)}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"w-9 h-9\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M4 6h16M4 12h16M4 18h16\"\n                />\n              </svg>\n            </button>\n          </div>\n          <div\n            className={\n              ' lg:flex flex-grow items-center right-0 ' +\n              (navbarOpen\n                ? ` absolute lg:flex bg-white border-t border-gray-200 shadow-md `\n                : ' hidden ')\n            }\n            style={{\n              top: navbarOpen ? dimensions.height : 0,\n            }}\n          >\n            <ul\n              className={`flex flex-col lg:flex-row list-none lg:ml-auto ${\n                navbarOpen ? ' ' : 'items-center'\n              }`}\n            >\n              <li className=\"text-left\">\n                <NavLink to={`/palette/${colorService.getColorSlug(colors)}`}>\n                  <div\n                    className={`px-3 py-2 flex items-center text-base uppercase font-medium leading-snug text-gray-800 hover:opacity-75`}\n                  >\n                    <div className=\"mx-4\">Palette</div>\n                  </div>\n                </NavLink>\n              </li>\n              <li className=\"text-left\">\n                <NavLink to=\"/demo\">\n                  <div\n                    className={`px-3 py-2 flex items-center text-base uppercase font-medium leading-snug text-gray-800 hover:opacity-75`}\n                  >\n                    <div className=\"mx-4\">Demo</div>\n                  </div>\n                </NavLink>\n              </li>\n              <li className=\"text-left\">\n                <NavLink to=\"/saved\">\n                  <div\n                    className={`px-3 py-2 flex items-center text-base uppercase font-medium leading-snug text-gray-800 hover:opacity-75`}\n                  >\n                    <div className=\"mx-4\">Saved</div>\n                  </div>\n                </NavLink>\n              </li>\n\n              {isLoggedIn ? (\n                <li className=\"text-left\">\n                  <div\n                    className={`px-3 py-2 flex items-center text-base uppercase font-medium leading-snug text-gray-800 hover:opacity-75`}\n                  >\n                    <div className=\"mx-4\">\n                      <p>Logout</p>\n                    </div>\n                  </div>\n                </li>\n              ) : (\n                <>\n                  <li className=\"text-left\">\n                    <SignUp\n                      showSignUpModal={showSignUpModal}\n                      setShowSignUpModal={setShowSignUpModal}\n                      setNavbarOpen={setNavbarOpen}\n                    />\n                  </li>\n                  <li className=\"text-left\">\n                    <SignIn\n                      showSignInModal={showSignInModal}\n                      setShowSignInModal={setShowSignInModal}\n                      setNavbarOpen={setNavbarOpen}\n                    />\n                  </li>\n                </>\n              )}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nconst Hue = ({\n  color,\n  curColor,\n  length,\n  setNewColorButton,\n  setShowHueButton,\n  isMobile\n}: any) => {\n  const [light, setLight] = useState(false);\n  const [hover, setHovered] = useState(false);\n  \n  useEffect(() => {\n    checkColor({ color });\n  }, []);\n\n  const checkColor = ({ color }: any) => {\n    let format = color.substring(1);\n    let rgb = parseInt(format, 16);\n    let r = (rgb >> 16) & 0xff;\n    let g = (rgb >> 8) & 0xff;\n    let b = (rgb >> 0) & 0xff;\n\n    let luma = (0.299 * r + 0.587 * g + 0.114 * b) / 225;\n    if (luma < 0.5) {\n      return setLight(true);\n    } else {\n      return setLight(false);\n    }\n  };\n\n  const isHovered = () => {\n    setHovered(true);\n  };\n\n  const notHovered = () => {\n    setHovered(false);\n  };\n\n  return (\n    <button\n      className=\"colorCode\"\n      onMouseEnter={isHovered}\n      onMouseLeave={notHovered}\n      onClick={() => {\n        setNewColorButton(color);\n        setShowHueButton(false);\n      }}\n      style={isMobile ? {\n        backgroundColor: `${color}`,\n        width: `${100/ 20}vw`,\n        height: `${92 / length}vh`,\n        writingMode: 'vertical-lr',\n        textOrientation: 'upright'\n      } : \n      {\n        backgroundColor: `${color}`,\n        height: `${100 / 20}vh`,\n        width: `${100 / length}vw`,\n      }\n    }\n    >\n      {light ? (\n        <p style={{ fontSize: '1.5em', color: 'white' }}>\n          {hover || color === curColor ? `${color}` : ''}\n        </p>\n      ) : (\n        <p style={{ fontSize: '1.5em', color: 'black' }}>\n          {hover || color === curColor ? `${color}` : ''}\n        </p>\n      )}\n    </button>\n  );\n};\n\nexport default Hue;\n","//@ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport './ColorPane.css';\nimport chroma from 'chroma-js';\nimport Hue from './Hue';\n\ninterface ColorPaneProps {\n  id: string;\n  color: string;\n  length: number;\n  colors: {\n    id: string;\n    color: string;\n    lock: boolean;\n  }[];\n  setColors: ([]) => void;\n  deleteColor: () => void;\n  toggleLock: () => void;\n  dragHandleProps: any;\n  isMobile: boolean;\n}\n\nconst ColorPane = ({\n  id,\n  color,\n  length,\n  lock,\n  colors,\n  setColors,\n  deleteColor,\n  toggleLock,\n  dragHandleProps,\n  isMobile\n}: ColorPaneProps) => {\n  const [light, setLight] = useState(false);\n  const [showHue, setShowHue] = useState(false);\n  const [newColor, setNewColor] = useState(color);\n  const [oldColor, setOldColor] = useState(color);\n\n  color = newColor;\n\n  const getNewColors = (colors, newColor) => {\n    return colors.map((el) =>\n      el.color === oldColor\n        ? { id: el.id, color: newColor }\n        : { id: el.id, color: el.color }\n    );\n  };\n\n  useEffect(() => {\n    checkColor({ color });\n    const newColors = getNewColors(colors, newColor);\n    setColors(newColors);\n  }, [newColor]);\n\n  const checkColor = ({ color }: any) => {\n    let format = color.substring(1);\n    let rgb = parseInt(format, 16);\n    let r = (rgb >> 16) & 0xff;\n    let g = (rgb >> 8) & 0xff;\n    let b = (rgb >> 0) & 0xff;\n\n    let luma = (0.299 * r + 0.587 * g + 0.114 * b) / 225;\n    if (luma < 0.5) {\n      return setLight(true);\n    } else {\n      return setLight(false);\n    }\n  };\n  let scaleArr = [];\n\n  for (let i = 1.8; i > 0.2; i -= 0.2) {\n    scaleArr.push(\n      chroma(`${color.substring(1)}`)\n        .darken(i)\n        .hex()\n        .toUpperCase()\n    );\n  }\n\n  scaleArr.push(color);\n\n  for (let i = 0.1; i < 2; i += 0.2) {\n    scaleArr.push(\n      chroma(`${color.substring(1)}`)\n        .brighten(i)\n        .hex()\n        .toUpperCase()\n    );\n  }\n\n  const setNewColorButton = (color) => {\n    setOldColor(newColor);\n    setNewColor(color);\n  };\n\n  const setShowHueButton = () => {\n    setShowHue(false);\n  };\n\n  const renderButtons = (light) => {\n    return (\n      <div className=\"flex flex-col h-full \">\n        <button\n          onClick={() => {\n            navigator.clipboard.writeText(color);\n          }}\n          style={{\n            outline: 'none',\n            fontSize: '2em',\n            color: light ? 'white' : 'black',\n          }}\n        >\n          {color}\n        </button>\n        <div className=\"m-auto\">\n          <div>\n            <div\n              {...dragHandleProps}\n              className={`${light ? 'text-white' : 'text-black'}`}\n            >\n              &lt;- -&gt;\n            </div>\n          </div>\n          <div className={`${light ? 'text-white' : 'text-black'}`}>\n            <button onClick={() => toggleLock(id)}>Lock</button>\n          </div>\n          <div className={`${light ? 'text-white' : 'text-black'}`}>\n            <button onClick={() => deleteColor(id)}>Delete</button>\n          </div>\n          <div className={`${light ? 'text-white' : 'text-black'}`}>\n            <button onClick={() => setShowHue(true)}>show hues</button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div\n        className=\"h-full \"\n        style={isMobile ? {\n          width: '100vw',\n          background: `${color}`,\n          height: `${92 / length}vh`,\n        } : {\n          width: `${100 / length}vw`,\n          background: `${color}`,\n          height: '92vh',\n        }}\n      >\n        {showHue ? (\n          <div>\n            {scaleArr.map((a, i) => {\n              return (\n                <Hue\n                  color={scaleArr[i]}\n                  curColor={newColor}\n                  length={length}\n                  setNewColorButton={setNewColorButton}\n                  setShowHueButton={setShowHueButton}\n                  key={i}\n                  isMobile={isMobile}\n                />\n              );\n            })}\n          </div>\n        ) : (\n          renderButtons(light)\n        )}\n      </div>\n    </div>\n  );\n};\nexport default ColorPane;\n","import React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './Palette.css';\nimport ColorPane from './ColorPane';\n\ninterface PaletteProps {\n  colors: {\n    id: string;\n    color: string;\n    lock: boolean;\n  }[];\n  setColors: ([]) => void;\n  deleteColor: () => void;\n  toggleLock: () => void;\n  isMobile: boolean;\n}\n\nconst Palette = ({\n  colors,\n  setColors,\n  deleteColor,\n  toggleLock,\n  isMobile,\n}: PaletteProps) => {\n  const onDragEnd = (result: any) => {\n    if (!result.destination) return;\n\n    const items = Array.from(colors);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setColors(items);\n  };\n\n  const displayDraggablePanels = () => {\n    //@ts-ignore\n    return colors.map(({ id, color }, index) => {\n      return (\n        <Draggable key={id} draggableId={id} index={index}>\n          {(provided) => (\n            <div ref={provided.innerRef} {...provided.draggableProps}>\n              <ColorPane\n                id={id}\n                color={color}\n                colors={colors}\n                setColors={setColors}\n                length={colors.length}\n                deleteColor={deleteColor}\n                toggleLock={toggleLock}\n                dragHandleProps={provided.dragHandleProps}\n                isMobile={isMobile}\n              />\n            </div>\n          )}\n        </Draggable>\n      );\n    });\n  };\n\n  return (\n    <div className=\"Palette\">\n      <DragDropContext onDragEnd={onDragEnd}>\n        {isMobile ? (\n          <Droppable droppableId=\"characters\">\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={{ width: '100%' }}\n              >\n                {displayDraggablePanels()}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ) : (\n          <Droppable droppableId=\"characters\" direction=\"horizontal\">\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={{ width: '100%', display: 'flex' }}\n              >\n                {displayDraggablePanels()}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        )}\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default Palette;\n","//@ts-nocheck\nimport React, {useState, useEffect} from 'react';\nimport Palette from './Palette';\nimport OptionsBar from './OptionsBar';\n\nfunction PalettePage({\n  colors,\n  colorMode,\n  setColors,\n  setColorMode,\n  checkLockGenerate,\n  addColor,\n  deleteColor,\n  toggleLock,\n}) \n\n{\n  const [width, setWidth] = useState<number>(window.innerWidth)\n\n  function handleWindowSizeChange(){\n    setWidth(window.innerWidth);\n  }\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowSizeChange);\n    return () => {\n      window.removeEventListener('resize', handleWindowSizeChange);\n    }\n  }, [])\n  let isMobile: boolean = (width <= 768);\n  return (\n    <div>\n      <OptionsBar\n        colorMode={colorMode}\n        setColorMode={setColorMode}\n        checkLockGenerate={checkLockGenerate}\n        addColor={addColor}\n        length={colors.length}\n        colors={colors}\n      />\n      <Palette\n        colors={colors}\n        setColors={setColors}\n        deleteColor={deleteColor}\n        toggleLock={toggleLock}\n        isMobile={isMobile}\n      />\n    </div>\n  );\n}\n\nexport default PalettePage;\n","export const TrashIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"2\"\n        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n      />\n    </svg>\n  );\n};\n","//@ts-nocheck\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport colorService from '../services/colorService';\nimport { v4 as uuidv4 } from 'uuid';\nimport { TrashIcon } from './Icons';\n\nconst Card = ({ palette, setColors, mockUser }) => {\n  const history = useHistory();\n\n  const handleClickView = () => {\n    const colorSlug = colorService.getColorSlug(palette.colors);\n    palette.colors.forEach((el) => (el.id = uuidv4()));\n    setColors(palette.colors);\n    history.push(`palette/${colorSlug}`);\n  };\n\n  const handleClickDelete = () => {\n    if (window.confirm('Are you sure you want to delete this palette?')) {\n      // then delete from users liked palettes in db\n    }\n  };\n\n  return (\n    <div className=\"transition duration-300 ease-in-out transform hover:shadow-xl\">\n      <div className=\"flex flex-col justify-between bg-white shadow-md rounded-sm w-64 h-32 \">\n        <div className=\"flex flex-row justify-between h-full\">\n          {palette.colors.map((color, i) => {\n            return (\n              <div\n                key={i}\n                className=\"h-full w-full\"\n                style={{ backgroundColor: `${color.color}`, height: '100%' }}\n              ></div>\n            );\n          })}\n        </div>\n\n        <div className=\"flex justify-between px-2 py-1 border-gray-100\">\n          <div className=\"flex justify-between w-2/4\">\n            <div>{palette.likes} likes</div>\n            <button onClick={handleClickView}>View</button>\n          </div>\n          {mockUser?.likedPalettes.includes(palette.id) ? (\n            <button onClick={handleClickDelete}>\n              <TrashIcon />\n            </button>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","// @ts-nocheck\nimport Card from './Card';\n\nconst CardList = ({data, setColors}) => {\n \n  if (data) {\n    return (\n      <div className=\"flex justify-center\">\n        <ul className=\"my-12 md:flex md:flex-wrap md:justify-center\">\n          {data.map((palette, i) => (\n            <li key={palette.id} className=\"mb-10 md:mx-5\">\n              <Card palette={palette} setColors={setColors} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default CardList;\n","//@ts-nocheck\nimport React, {useState, useEffect} from 'react'\nimport CardList from './CardList';\nimport saveService from '../services/saveService'\n\nimport axios from 'axios';\n\nfunction SavedPage({setColors}) {\n    const [palette, setPalette] = useState([])\n\n    useEffect(() => {\n        saveService.getPalettes().then(response => {\n            setPalette(response.data)\n        })\n    }, [])\n    return (\n        <div>\n            Palettes\n            {console.log(palette)}\n            <CardList data={palette} setColors={setColors}/>\n        </div>\n    )\n}\n\nexport default SavedPage\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom';\nimport './App.css';\nimport chroma from 'chroma-js';\nimport { v4 as uuidv4 } from 'uuid';\nimport DemoPage from './components/DemoPage';\nimport LandingPage from './components/LandingPage';\nimport Navbar from './components/Navbar';\nimport PalettePage from './components/PalettePage';\nimport SavePage from './components/SavedPage'\nimport colorService from './services/colorService';\n\ninterface IState {\n  colors: {\n    id: string;\n    color: string;\n    lock: boolean;\n  }[];\n}\n\nfunction App() {\n  const [colors, setColors] = useState<IState['colors']>([]);\n  const [colorMode, setColorMode] = useState<string>('monochrome');\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getInitialColors = async () => {\n      const colorSlug = location.pathname.split('/')?.[2];\n      const initialColors = colorSlug\n        ? colorService.getColorsArrFromSlug(colorSlug)\n        : await colorService.generatePalette('monochrome');\n      setColors(initialColors);\n    };\n    getInitialColors();\n  }, []);\n\n  useEffect(() => {\n    generatePalette(chroma.random().hex().substring(1));\n  }, [colorMode]);\n\n  useEffect(() => {\n    const colorSlug = colorService.getColorSlug(colors);\n    if (location.pathname.startsWith(`/palette`)) {\n      history.replace(`/palette/${colorSlug}`);\n    } else if (location.pathname.startsWith(`/demo`)) {\n      history.replace(`/demo/${colorSlug}`);\n    }\n  }, [colors]);\n\n  const checkLockGenerate = async () => {\n    let checkLock = colors.find((color) => color.lock === true);\n    {\n      console.log(typeof checkLock, ' type of checkLock');\n    }\n    if (typeof checkLock === 'undefined') {\n      {\n        console.log('Checklock is undefined');\n      }\n      let random = chroma.random().hex().substring(1);\n      generatePalette(random);\n    } else {\n      {\n        console.log(checkLock);\n      }\n      generateLockedPalette(checkLock?.color.substring(1));\n    }\n  };\n\n  const generateLockedPalette = async (input: any) => {\n    let response = colorService.getPalette(input, colorMode, colors.length);\n    let returnedArray = (await response).data.colors;\n    let newArray = [];\n    for (let i = 0; i < returnedArray.length; i++) {\n      if (colors[i].lock === true) {\n        newArray.push({\n          id: colors[i].id,\n          color: colors[i].color,\n          lock: colors[i].lock,\n        });\n      } else {\n        newArray.push({\n          id: uuidv4(),\n          color: returnedArray[i].hex.value,\n          lock: false,\n        });\n      }\n    }\n    if (colors.length === 0) return;\n    console.log(newArray, ' Generated from Locked Palette');\n    setColors(newArray);\n  };\n  const generatePalette = async (input: any) => {\n    let response = colorService.getPalette(input, colorMode, colors.length);\n    let returnedArray = (await response).data.colors;\n    let newArray = [];\n    for (let i = 0; i < returnedArray.length; i++) {\n      newArray.push({\n        id: uuidv4(),\n        color: returnedArray[i].hex.value,\n        lock: false,\n      });\n    }\n    //newArray.sort(() => Math.random() - 0.5);\n    if (colors.length === 0) return;\n    console.log(newArray, 'Generated from Unlocked Palette');\n    setColors(newArray);\n  };\n\n  const addColor = async () => {\n    let first =\n      colors[Math.floor(Math.random() * colors.length)].color.substring(1);\n    let response = colorService.getPalette(first, colorMode, 15);\n    let returnedArray = (await response).data.colors;\n    console.log(colors.length);\n\n    let newColor = {\n      id: uuidv4(),\n      color: returnedArray[Math.floor(Math.random() * 9)].hex.value,\n      lock: false,\n    };\n\n    setColors((colors) => [...colors, newColor]);\n  };\n\n  const deleteColor = (id: string) => {\n    const newPalette = colors.filter((item) => item.id !== id);\n    setColors(newPalette);\n  };\n\n  const toggleLock = (id: string) => {\n    const colorLock = colors.find((item) => item.id === id);\n    //@ts-ignore\n    const changedColor = {\n      id: colorLock?.id,\n      color: colorLock?.color,\n      lock: !colorLock?.lock,\n    };\n    //@ts-ignore\n    let index = colors.findIndex((color) => color.id === colorLock.id);\n    console.log(index, ' + index');\n    //@ts-ignore\n    colors.splice(index, 1, changedColor);\n    console.log(colors, ' + colors');\n    setColors(colors);\n  };\n\n  if (colors.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar colors={colors} />\n      <Switch>\n        <Route exact path=\"/\">\n          <LandingPage setColors={setColors} colorMode={colorMode} />\n        </Route>\n        <Route exact path={`/palette/:colorSlug`}>\n          <PalettePage\n            colors={colors}\n            setColors={setColors}\n            colorMode={colorMode}\n            setColorMode={setColorMode}\n            addColor={addColor}\n            checkLockGenerate={checkLockGenerate}\n            deleteColor={deleteColor}\n            toggleLock={toggleLock}\n          />\n        </Route>\n        <Route exact path={`/demo/:colorSlug}`}>\n          <DemoPage\n            colors={colors}\n            setColorMode={setColorMode}\n            generatePalette={generatePalette}\n          />\n        </Route>\n        <Route exact path=\"/saved\">\n          <SavePage setColors={setColors}/>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}